<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>Calendar</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap">
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Outlined" rel="stylesheet">
  <style>
    body {
      font-family: 'Poppins', sans-serif;
      margin: 0;
      padding: 0;
    }

    .wrapper {
      max-width: 800px;
      margin: 0 auto;
      padding: 20px;
    }

    .calendar {
      display: grid;
      grid-template-rows: auto 1fr;
      margin-top: 20px;
    }

    header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 10px;
    }

    .current-date {
      font-size: 1.5rem;
      font-weight: 600;
    }

    .icons {
      display: flex;
      gap: 10px;
    }

    .icons .material-icons-outlined {
      cursor: pointer;
      font-size: 28px;
      transition: transform 0.2s ease;
      color: #007bff;
    }

    .icons .material-icons-outlined:hover {
      transform: scale(1.2);
    }

    .weeks {
      display: grid;
      grid-template-columns: repeat(7, 1fr);
      text-align: center;
      font-weight: bold;
      margin-bottom: 5px;
    }

    .days {
      display: grid;
      grid-template-columns: repeat(7, 1fr);
      gap: 5px;
    }

    .days li {
      list-style: none;
      text-align: center;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 5px;
      min-height: 60px;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      position: relative;
      background-color: white; /* Default background */
    }

    .days li:hover {
      background-color: #f0f0f0;
      cursor: pointer;
    }

    .pending {
      background-color: #d4edda; /* Green for pending bookings */
      color: #155724;
      border: 1px solid #c3e6cb;
    }

    .past {
      background-color: #fff3cd; /* Yellow for past bookings */
      color: #856404;
      border: 1px solid #ffeeba;
    }

    .booking-count {
      background-color: #007bff; /* Blue background for booking count */
      color: #fff; /* White text for the number */
      border-radius: 50%;
      width: 24px;
      height: 24px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 0.8rem;
      position: absolute;
      top: 5px;
      right: 5px;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .weeks,
      .days {
        grid-template-columns: repeat(7, minmax(30px, 1fr));
      }

      .days li {
        padding: 8px;
        font-size: 0.8em;
        min-height: 50px;
      }
    }

    @media (max-width: 480px) {
      .wrapper {
        padding: 10px;
      }

      .weeks,
      .days {
        grid-template-columns: repeat(7, minmax(20px, 1fr));
      }

      .days li {
        padding: 5px;
        font-size: 0.7em;
        min-height: 40px;
      }

      .booking-count {
        width: 20px;
        height: 20px;
        font-size: 0.7rem;
      }
    }
  </style>
</head>
<body>
  <div class="wrapper">
    <%- include('./layouts/header') %>
    <header>
      <p class="current-date"></p>
      <div class="icons">
        <span id="prev" class="material-icons-outlined">chevron_left</span>
        <span id="next" class="material-icons-outlined">chevron_right</span>
      </div>
    </header>
    <div class="calendar">
      <ul class="weeks" style="list-style:none;">
        <li>Sun</li>
        <li>Mon</li>
        <li>Tue</li>
        <li>Wed</li>
        <li>Thu</li>
        <li>Fri</li>
        <li>Sat</li>
      </ul>
      <ul class="days"></ul>
    </div>
  </div>

  <script>
    const bookings = <%- JSON.stringify(bookings) %>;

    let monthOffset = 0;

    function populateCalendar() {
      const daysContainer = document.querySelector('.days');
      daysContainer.innerHTML = '';

      const today = new Date();
      const currentDate = new Date();
      currentDate.setMonth(currentDate.getMonth() + monthOffset);

      const month = currentDate.getMonth();
      const year = currentDate.getFullYear();
      const firstDay = new Date(year, month, 1);
      const lastDay = new Date(year, month + 1, 0);

      const currentBookings = bookings.filter(booking => {
        const bookingDate = new Date(booking._id);
        return bookingDate.getMonth() === month && bookingDate.getFullYear() === year;
      });

      for (let i = 0; i < firstDay.getDay(); i++) {
        const li = document.createElement('li');
        daysContainer.appendChild(li);
      }

      for (let day = 1; day <= lastDay.getDate(); day++) {
        const li = document.createElement('li');
        li.textContent = day;

        const dateString = `${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`;
        const booking = currentBookings.find(b => b._id === dateString);

        if (booking) {
          const span = document.createElement('span');
          span.classList.add('booking-count');
          span.textContent = booking.count;
          li.appendChild(span);

          const bookingDate = new Date(booking._id);
          if (bookingDate < today) {
            li.classList.add('past'); // Past bookings
          } else {
            li.classList.add('pending'); // Pending bookings
          }
        }

        daysContainer.appendChild(li);
      }

      document.querySelector('.current-date').textContent = `${new Intl.DateTimeFormat('en-US', {
        month: 'long',
        year: 'numeric',
      }).format(currentDate)}`;
    }

    document.querySelector('#prev').addEventListener('click', () => {
      monthOffset--;
      populateCalendar();
    });

    document.querySelector('#next').addEventListener('click', () => {
      monthOffset++;
      populateCalendar();
    });

    populateCalendar();
  </script>
</body>
</html>
