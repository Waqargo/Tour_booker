<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
  <meta charset="utf-8">
  <title>Dynamic Calendar JavaScript</title>
  <link rel="stylesheet" href="css/calender.css">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200">
  <script src="js/calendercript.js" defer></script>
  <style>
    .highlight {
      background-color: yellow; /* Highlight color */
      border-radius: 50%; /* Round shape */
    }
  </style>
</head>
<body>
  <div class="con" style="display: flex; flex-direction:column;">
    <%- include('./layouts/header') %>
    
    <div class="wrapper">
      <header>
        <p class="current-date"></p>
        <div class="icons">
          <span id="prev" class="material-symbols-rounded">chevron_left</span>
          <span id="next" class="material-symbols-rounded">chevron_right</span>
        </div>
      </header>
      <div class="calendar">
        <ul class="weeks">
          <li>Sun</li>
          <li>Mon</li>
          <li>Tue</li>
          <li>Wed</li>
          <li>Thu</li>
          <li>Fri</li>
          <li>Sat</li>
        </ul>
        <ul class="days"></ul>
      </div>
    </div>
  </div>

  <script>
    // Assuming bookings is passed as an array of objects with tourDate properties
    const bookings = <%- JSON.stringify(bookings) %>;
    const today = new Date();
    
    // Function to populate the calendar
    function populateCalendar() {
      const daysContainer = document.querySelector('.days');
      daysContainer.innerHTML = ''; // Clear previous days

      // Create a new date object for the current month
      const currentDate = new Date();
      const month = currentDate.getMonth();
      const year = currentDate.getFullYear();

      // Calculate first day of the month
      const firstDay = new Date(year, month, 1);
      const lastDay = new Date(year, month + 1, 0);
      
      // Add empty slots for the days before the first day of the month
      for (let i = 0; i < firstDay.getDay(); i++) {
        const li = document.createElement('li');
        daysContainer.appendChild(li);
      }

      // Loop through all the days of the month
      for (let day = 1; day <= lastDay.getDate(); day++) {
        const li = document.createElement('li');
        li.textContent = day;

        // Check if this day has any bookings
        const currentDate = new Date(year, month, day);
        const hasTour = bookings.some(booking => {
          const tourDate = new Date(booking.tourDate);
          return tourDate.toDateString() === currentDate.toDateString() && tourDate >= today;
        });

        // Highlight the day if there is a tour today or onward
        if (hasTour && currentDate >= today) {
          li.classList.add('highlight');
        }

        daysContainer.appendChild(li);
      }
    }

    // Call the populateCalendar function to render the calendar
    populateCalendar();
  </script>
</body>
</html>
